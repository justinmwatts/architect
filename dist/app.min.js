!function(n){"use strict";var t={Plugins:{},ExportPlugin:function(n,t){this.Plugins[n]=t},ExtendDefaults:function(n,t){var i;for(i in t)t.hasOwnProperty(i)&&(n[i]=t[i]);return n}};window.Architect=t}(jQuery);
!function(t){"use strict";var s=function(){var t={buttonToggleClass:"js-nav-hidden-button",menuClass:"js-nav-hidden-menu",buttonClose:"js-nav-hidden-close",activeClass:"is-active"};arguments[0]&&"object"==typeof arguments[0]?this.options=Architect.ExtendDefaults(t,arguments[0]):this.options=t};s.prototype.init=function(){var s="."+this.options.buttonToggleClass,o="."+this.options.menuClass,n="."+this.options.buttonClose,e=this.options.activeClass;t("body").on("click",s,function(n){n.preventDefault(),t(s).toggleClass(e),t(o).toggleClass(e)}),t("body").on("click",n,function(){t(s).removeClass(e),t(o).removeClass(e)})},Architect.ExportPlugin("NavHidden",s)}(jQuery);
!function(){"use strict";var t=function(){var t={stickyElement:"js-sticky-element",anchor:"js-sticky-element-anchor"};arguments[0]&&"object"==typeof arguments[0]?this.options=Architect.ExtendDefaults(t,arguments[0]):this.options=t};t.prototype.init=function(){function t(){var t=e(o);t<=0?n.style.position="fixed":n.style.position="relative"}function e(t){for(var e=0;t;){if("BODY"==t.tagName){var o=t.scrollTop||document.documentElement.scrollTop;e+=t.offsetTop-o+t.clientTop}else e+=t.offsetTop-t.scrollTop+t.clientTop;t=t.offsetParent}return e}var o=document.getElementsByClassName(this.options.anchor)[0],n=document.getElementsByClassName(this.options.stickyElement)[0];t(),window.addEventListener("scroll",t,!1),window.addEventListener("resize",t,!1)},Architect.ExportPlugin("StickElement",t)}();
//# sourceMappingURL=data:application/json;base64,
